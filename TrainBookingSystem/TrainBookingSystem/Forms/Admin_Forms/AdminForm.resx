<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing"">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="LoginInHeader.GenerateMember" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>False</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>